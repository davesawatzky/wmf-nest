//
//  The full context object (req and res) return from Passport
//  It's the normal context object with the user details appended to the bottom.
//  The user properties are returned by the 
//  1. validateuser function in auth.service
//  2. and then appended by Passport in the local.strategy
//  3. returned to the gql-auth guard which
//  4. finally transfers it back to the resolver in the context variable.
//


{
  req: <ref *1> IncomingMessage {
    _readableState: ReadableState {
      state: 325654,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      errored: null,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      timeout: 0,
      [Symbol(async_id_symbol)]: 22,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 7864,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 60,
        [Symbol(triggerId)]: 58
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:3000',
      'Accept',
      '*/*',
      'Accept-Language',
      'en-US,en;q=0.5',
      'Accept-Encoding',
      'gzip, deflate, br',
      'content-type',
      'application/json',
      'Content-Length',
      '340',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0',
      'Origin',
      'http://localhost:3000',
      'Connection',
      'keep-alive',
      'Cookie',
      'diatonicToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhdmlkQGRpYXRvbmljLmlvIiwic3ViIjo5LCJwcml2YXRlVGVhY2hlciI6ZmFsc2UsInNjaG9vbFRlYWNoZXIiOmZhbHNlLCJpYXQiOjE3MDY4OTYyMDcsImV4cCI6MTcwNjk4MjYwN30.74qGzXSAfiXe_Biu9VEP2bGApfuMjh7famDV0fdEYbg',
      'Sec-Fetch-Dest',
      'empty',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Site',
      'same-origin'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      timeout: 0,
      [Symbol(async_id_symbol)]: 22,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 7864,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 60,
        [Symbol(triggerId)]: 58
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/graphql',
    originalUrl: '/graphql',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/graphql',
      path: '/graphql',
      href: '/graphql',
      _raw: '/graphql'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Socket],
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    secret: undefined,
    cookies: {
      diatonicToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhdmlkQGRpYXRvbmljLmlvIiwic3ViIjo5LCJwcml2YXRlVGVhY2hlciI6ZmFsc2UsInNjaG9vbFRlYWNoZXIiOmZhbHNlLCJpYXQiOjE3MDY4OTYyMDcsImV4cCI6MTcwNjk4MjYwN30.74qGzXSAfiXe_Biu9VEP2bGApfuMjh7famDV0fdEYbg'
    },
    signedCookies: [Object: null prototype] {},
    body: {
      query: 'mutation signin($credentials: CredentialsSignin!) {\n' +  
        '  signin(credentials: $credentials) {\n' +
        '    diatonicToken\n' +
        '    user {\n' +
        '      firstName\n' +
        '      lastName\n' +
        '    }\n' +
        '    userErrors {\n' +
        '      field\n' +
        '      message\n' +
        '    }\n' +
        '  }\n' +
        '}',
      variables: [Object],
      operationName: 'signin'
    },
    _body: true,
    length: undefined,
    rawBody: <Buffer 7b 22 71 75 65 72 79 22 3a 22 6d 75 74 61 74 69 6f 6e 20 73 69 67 6e 69 6e 28 24 63 72 65 64 65 6e 74 69 61 6c 73 3a 20 43 72 65 64 65 6e 74 69 61 6c ... 290 more bytes>,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'localhost:3000',
      accept: '*/*',
      'accept-language': 'en-US,en;q=0.5',
      'accept-encoding': 'gzip, deflate, br',
      'content-type': 'application/json',
      'content-length': '340',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0',
      origin: 'http://localhost:3000',
      connection: 'keep-alive',
      cookie: 'diatonicToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhdmlkQGRpYXRvbmljLmlvIiwic3ViIjo5LCJwcml2YXRlVGVhY2hlciI6ZmFsc2UsInNjaG9vbFRlYWNoZXIiOmZhbHNlLCJpYXQiOjE3MDY4OTYyMDcsImV4cCI6MTcwNjk4MjYwN30.74qGzXSAfiXe_Biu9VEP2bGApfuMjh7famDV0fdEYbg',
      'sec-fetch-dest': 'empty',
      'sec-fetch-mode': 'cors',
      'sec-fetch-site': 'same-origin'
    },
    [Symbol(kHeadersCount)]: 26,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  },
  res: <ref *2> ServerResponse {
    _events: [Object: null prototype] { finish: [Array] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      timeout: 0,
      [Symbol(async_id_symbol)]: 22,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 7864,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 60,
        [Symbol(triggerId)]: 58
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: <ref *1> IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/graphql',
      originalUrl: '/graphql',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *2],
      secret: undefined,
      cookies: [Object],
      signedCookies: [Object: null prototype] {},
      body: [Object],
      _body: true,
      length: undefined,
      rawBody: <Buffer 7b 22 71 75 65 72 79 22 3a 22 6d 75 74 61 74 69 6f 6e 20 73 69 67 6e 69 6e 28 24 63 72 65 64 65 6e 74 69 61 6c 73 3a 20 43 72 65 64 65 6e 74 69 61 6c ... 290 more bytes>,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'content-security-policy': [Array],
      'cross-origin-opener-policy': [Array],
      'cross-origin-resource-policy': [Array],
      'origin-agent-cluster': [Array],
      'referrer-policy': [Array],
      'strict-transport-security': [Array],
      'x-content-type-options': [Array],
      'x-dns-prefetch-control': [Array],
      'x-download-options': [Array],
      'x-frame-options': [Array],
      'x-permitted-cross-domain-policies': [Array],
      'x-xss-protection': [Array],
      'access-control-allow-origin': [Array],
      vary: [Array],
      'access-control-allow-credentials': [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  body: { email: 'david@diatonic.io', password: 'Dt159753!' },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _sessionManager: SessionManager {
    _key: 'passport',
    _serializeUser: [Function: bound ]
  },
  authInfo: undefined,
  user: {
    id: 9,
    email: 'david@diatonic.io',
    emailConfirmed: true,
    staff: false,
    admin: false,
    privateTeacher: false,
    schoolTeacher: false,
    firstName: 'David',
    lastName: 'Sawatzky',
    apartment: null,
    streetNumber: null,
    streetName: null,
    city: null,
    province: null,
    postalCode: null,
    phone: null,
    instrument: 'Clarinet',
    hasSignedIn: false,
    updatedAt: 2024-01-31T19:03:46.053Z,
    createdAt: 2024-01-31T19:03:46.053Z
  }
}