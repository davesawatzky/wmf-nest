type Level {
	id: Int!
	name: String!
	description: String
	# categories(categoryID: Int): [Category]
	classes(SGSLabel: SGSLabel, subdisciplineID: Int, categoryID: Int): [FestivalClass]!
}

input LevelInput {
	name: String!
	description: String
}

type Query {
  levels(categoryID: Int, subdisciplineID: Int): [Level]
	level(id: Int!): Level
	# levelsByName(name: String!): [Level!]
}

type Mutation {
  levelCreate(level: LevelInput!): LevelPayload!
  levelUpdate(levelID: Int!, level: LevelInput!): LevelPayload!
  levelDelete(levelID: Int!): LevelPayload
}

type LevelPayload {
  userErrors: [UserError!]!
  level: Level
}
